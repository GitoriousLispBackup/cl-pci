(in-package :cl-pci)

(defun read-file-string (path)
  (with-open-file (stream path)
    (let ((data (make-string (file-length stream))))
      (read-sequence data stream)
      data)))

(defun chapter2-init ()
  (setf *critics* (make-hash-table :test #'equal))
  (let ((critics.json (read-file-string "critics.json")))
    (st-json:mapjso (lambda (k v)
                      (setf (gethash k *critics*)
                            (let ((alist '()))
                              (st-json:mapjso (lambda (ik iv)
                                                (push (cons ik iv) alist))
                                              v)
                              alist)))
                    (st-json:read-json-from-string critics.json))))

(defun filter (f lst)
  (let ((flst nil))
      (dolist (o lst)
        (if (funcall f o)
            (push o flst)))
      flst))
